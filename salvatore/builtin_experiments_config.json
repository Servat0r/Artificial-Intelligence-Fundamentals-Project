{
  "table_eiffel_tower": {
    "__description__": [
      "Experiment that uses the distances table approach for reconstructing contours ",
      "of the Eiffel Tower image (160x316)."
    ],
    "function": "distance_table",
    "dir_path": ".",
    "image_path": "images/torre eiffel.jpg",
    "p_crossover": 0.9,
    "p_mutation": 0.5,
    "population_size": 250,
    "max_generations": 12000,
    "random_seed": 10,
    "hof_size": 25,

    "canny_low": 100,
    "canny_high": 200,
    "num_of_points": 4000,

    "save_image_gen_step": 100,
    "other_callback_args": null,
    "logger": {
      "dir_path": ".",
      "stats_gen_step": 50,
      "csv_gen_step": 100
    },
    "stopping_criterions": {
      "max_time_stop": {
        "max_time": 3600.0
      },
      "min_fitness_stop": {
        "min_fitness_value": 0.0
      },
      "min_fitness_percentage_gain_stop": {
        "percentage": 0.0
      },
      "flat_percentage_fitness_stop": {
        "epsilon_perc": 0.0,
        "gen_num": 500
      }
    }
  },

  "table_mona_lisa": {
    "__description__": [
      "Experiment that uses the distances table approach for reconstructing contours ",
      "of the Mona Lisa RGB image (165x190)."
    ],
    "function": "distance_table",
    "dir_path": ".",
    "image_path": "images/Mona_Lisa_head.png",
    "p_crossover": 0.9,
    "p_mutation": 0.5,
    "population_size": 250,
    "max_generations": 10000,
    "random_seed": 10,
    "hof_size": 25,

    "canny_low": 150,
    "canny_high": 200,
    "num_of_points": 8000,

    "save_image_gen_step": 100,
    "other_callback_args": null,
    "logger": {
      "dir_path": ".",
      "stats_gen_step": 50,
      "csv_gen_step": 100
    },
    "stopping_criterions": {
      "max_time_stop": {
        "max_time": 4320.0
      },
      "min_fitness_stop": {
        "min_fitness_value": 0.0
      },
      "min_fitness_percentage_gain_stop": {
        "percentage": 0.0
      },
      "flat_percentage_fitness_stop": {
        "epsilon_perc": 0.0,
        "gen_num": 500
      }
    }
  },

  "table_singapore_400x300": {
    "__description__": [
      "Experiment that uses the distances table approach for reconstructing contours of the 400x300 ",
      "version of the Singapore skyline image."
    ],
    "function": "distance_table",
    "dir_path": ".",
    "image_path": "images/Singapore_skyline_400x300.jpg",
    "p_crossover": 0.9,
    "p_mutation": 0.5,
    "population_size": 250,
    "max_generations": 12000,
    "random_seed": 10,
    "hof_size": 25,

    "canny_low": 100,
    "canny_high": 200,
    "num_of_points": 10000,

    "save_image_gen_step": 100,
    "other_callback_args": null,
    "logger": {
      "dir_path": ".",
      "stats_gen_step": 100,
      "csv_gen_step": 100
    },
    "stopping_criterions": {
      "max_time_stop": {
        "max_time": 10800.0
      },
      "min_fitness_stop": {
        "min_fitness_value": 0.0
      },
      "min_fitness_percentage_gain_stop": {
        "percentage": 0.0
      },
      "flat_percentage_fitness_stop": {
        "epsilon_perc": 0.0,
        "gen_num": 500
      }
    }
  },

  "table_singapore_600x450": {
    "__description__": [
      "Experiment that uses the distances table approach for reconstructing contours of the 600x450 ",
      "version of the Singapore skyline image."
    ],
    "function": "distance_table",
    "dir_path": ".",
    "image_path": "images/Singapore_skyline_600x450.jpg",
    "p_crossover": 0.9,
    "p_mutation": 0.5,
    "population_size": 250,
    "max_generations": 12000,
    "random_seed": 10,
    "hof_size": 25,

    "canny_low": 100,
    "canny_high": 200,
    "num_of_points": 10000,

    "save_image_gen_step": 100,
    "other_callback_args": null,
    "logger": {
      "dir_path": ".",
      "stats_gen_step": 100,
      "csv_gen_step": 100
    },
    "stopping_criterions": {
      "max_time_stop": {
        "max_time": 10800.0
      },
      "min_fitness_stop": {
        "min_fitness_value": 0.0
      },
      "min_fitness_percentage_gain_stop": {
        "percentage": 0.0
      },
      "flat_percentage_fitness_stop": {
        "epsilon_perc": 0.0,
        "gen_num": 500
      }
    }
  }
}